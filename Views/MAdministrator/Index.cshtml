@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;

@model MAdministratorViewModel
@{
    ViewData["Title"] = "管理者マスター";
}

<div class="p-3">
    <h4>@ViewData["Title"]</h4>
    <div class="container-fluid p-2">
        <div class="row">
            <div class="col-auto">
                <form asp-action="Index" method="get">
                    <!--ExcelTest-->
                    <button class="btn btn-secondary" name="isExcelOutput" value="true" type="submit"><i class="fas fa-download fa-fw"></i>Excel出力</button>
                    <div class="input-group">
                        <input class="form-control" asp-for="SearchKeyWord" type="text" placeholder="キーワードを入力" aria-describedby="btnNavbarSearch" />
                        <button class="btn btn-secondary" id="btnNavbarSearch" type="submit"><i class="fas fa-search"></i></button>
                    </div>
                </form>
            </div>
    </div>
        <div class="row">
            <div class="col-auto">
                <span class="text-danger-custom">@ViewData["ErrorMessage"] </span>
                <span class="text-success-custom">@ViewData["Message"] </span>
            </div>
        </div>
        <div class="row pt-1">
            @if (@Model.AdministratorViewModels != null && @Model.AdministratorViewModels.Count > 0)
            {
                <div class="col-12">
                    <table class="sticky_table table-hover-evant">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.AdministratorViewModels[0].AdministratorLoginId)</th>
                                <th>@Html.DisplayNameFor(model => model.AdministratorViewModels[0].AdministratorName)</th>
                                <th>@Html.DisplayNameFor(model => model.AdministratorViewModels[0].AdministratorNameKana)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in @Model.AdministratorViewModels)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(model => item.AdministratorLoginId)</td>
                                    <td>@Html.DisplayFor(model => item.AdministratorName)</td>
                                    <td>@Html.DisplayFor(model => item.AdministratorNameKana)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="col-12">
                        <span class="page-no-label">
                            @(Model.PageViewModel.PageRowCount == 0 ? 0 : @Model.PageViewModel.PageRowStartNumber) - @Model.PageViewModel.PageRowEndNumber 件 / @Model.PageViewModel.PageRowCount 件中
                        </span>
                        @Html.PagedListPager((IPagedList)Model.AdministratorViewModels, pageNumber => Url.Action("PageChange", new { pageNumber }),
                            new PagedListRenderOptions
                            {
                            LiElementClasses = new string[] { "page-item" },
                            PageClasses = new string[] { "page-link" },
                            MaximumPageNumbersToDisplay = 10, //表示するページャーの数
                            DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded, //「次へ」の非表示設定
                            DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded, //「前へ」の非表示設定
                            DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded, //「最初へ」の非表示設定
                            DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded, //「最後へ」の表示設定
                            }
                        )
                    </div>
                </div>
            }
        </div>
    </div>
</div>