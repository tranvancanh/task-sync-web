@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;

@model MAdministratorViewModel
@{
    ViewData["Title"] = @Model.DisplayName;
    var pagedList = Model.AdministratorModels;
}

<div class="h4 mb-3">
    @{
        ViewData["Title"] = @Model.DisplayName;
    }
</div>
<div class="card shadow m-4">
    <div class="card-header">
        <h3 class="pt-2">@Model.DisplayName</h3>
    </div>
    <div class="card-body">
        <div class="p-2">
            <form class="form-inline ms-1" asp-controller="MAdministrator" enctype="multipart/form-data" method="get">
                <div class="row">
                    <div class="form-group col-auto p-2">
                        <div class="input-group">
                            <input class="form-control form-control-lg" asp-for="SearchKeyWord" type="text" placeholder="キーワードを入力" aria-describedby="btnNavbarSearch" />
                            <button class="btn btn-search btn-lg" asp-action="Index" id="btnNavbarSearch" type="submit"><i class="fas fa-search"></i></button>
                        </div>
                    </div>
                    <div class="form-group col-auto p-2">
                        <!--ExcelTest-->
                        <button class="btn btn-custom btn-lg" asp-action="ExcelOutput" ype="submit"><span class="p-2"><i class="fas fa-download fa-fw"></i> Excel出力</span></button>
                    </div>
                </div>
            </form>
            <div class="col-auto">
                <span class="text-danger-custom">@ViewData["ErrorMessage"] </span>
                <span class="text-success-custom">@ViewData["Message"] </span>
            </div>
            <div style="overflow-x: scroll;">
                <table class="table sticky_table table-hover-evant mt-3">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.AdministratorModels[0].AdministratorLoginId)</th>
                            <th>@Html.DisplayNameFor(model => model.AdministratorModels[0].AdministratorName)</th>
                            <th>@Html.DisplayNameFor(model => model.AdministratorModels[0].AdministratorNameKana)</th>
                            <th>@Html.DisplayNameFor(model => model.AdministratorModels[0].IsNotUse)</th>
                        </tr>
                    </thead>

                    @if (Model != null && Model.AdministratorModels != null && Model.AdministratorModels.Count > 0)
                    {
                        <tbody>
                            @foreach (var item in Model.AdministratorModels)
                            {
                                <tr>
                                    <td class="">@Html.DisplayFor(model => item.AdministratorLoginId)</td>
                                    <td class="">@Html.DisplayFor(model => item.AdministratorName)</td>
                                    <td class="">@Html.DisplayFor(model => item.AdministratorNameKana)</td>
                                    <td class="text-center">@Html.DisplayFor(model => item.IsNotUse)</td>
                                </tr>

                            }
                        </tbody>
                    }

                </table>
            </div>

            @if (pagedList != null)
            {
                <div class="mt-3">
                    <span class="page-no-label">
                        @pagedList.FirstItemOnPage-@pagedList.LastItemOnPage 件 / @(pagedList.TotalItemCount)件中
                    </span>
                    @Html.PagedListPager((IPagedList)Model.AdministratorModels, pageNumber => Url.Action("Index", new { searchKeyWord = Model.SearchKeyWord, pageNumber = pageNumber }),
                new PagedListRenderOptions
                {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },
                MaximumPageNumbersToDisplay = 10, //表示するページャーの数
                DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded, //「次へ」の非表示設定
                DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded, //「前へ」の非表示設定
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded, //「最初へ」の非表示設定
                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded, //「最後へ」の表示設定
                })
                </div>
            }
        </div>

    </div>
</div>